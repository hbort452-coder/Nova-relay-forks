name: Android Release APK

on:
  push:
    tags:
      - 'v*'
      - 'release-*'
  workflow_dispatch:

jobs:
  build-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Accept Android SDK licenses
        run: yes | sdkmanager --licenses

      - name: Grant execute permission for Gradle
        run: chmod +x gradlew

      - name: Build Release APK
        run: ./gradlew :app:assembleRelease -x test --no-daemon

      - name: Locate APK
        id: apk
        shell: bash
        run: |
          set -euo pipefail
          APK_PATH=$(ls -1 app/build/outputs/apk/release/*.apk | head -n 1)
          echo "apk_path=$APK_PATH" >> "$GITHUB_OUTPUT"
          echo "Found APK at: $APK_PATH"

      - name: Upload artifact (manual runs or non-tag pushes)
        if: ${{ github.event_name != 'push' || !startsWith(github.ref, 'refs/tags/') }}
        uses: actions/upload-artifact@v4
        with:
          name: app-release-apk
          path: ${{ steps.apk.outputs.apk_path }}

      - name: Create GitHub Release and upload APK
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ steps.apk.outputs.apk_path }}
          name: Nova Client ${{ github.ref_name }}
          body: |
            Automated release for ${{ github.ref_name }}.
            Contains the signed Android APK build.
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
